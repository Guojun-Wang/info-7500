/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BasicDutchAuction,
  BasicDutchAuctionInterface,
} from "../BasicDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cb3380380610cb3833981810160405281019061003291906100d1565b826003819055508160048190555080600581905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555043600281905550505050610124565b600080fd5b6000819050919050565b6100ae8161009b565b81146100b957600080fd5b50565b6000815190506100cb816100a5565b92915050565b6000806000606084860312156100ea576100e9610096565b5b60006100f8868287016100bc565b9350506020610109868287016100bc565b925050604061011a868287016100bc565b9150509250925092565b610b80806101336000396000f3fe60806040526004361061003f5760003560e01c80631998aeef14610044578063278ecde11461006257806342cbb15c1461008b5780634bb278f3146100b6575b600080fd5b61004c6100cd565b60405161005991906105e1565b60405180910390f35b34801561006e57600080fd5b5061008960048036038101906100849190610637565b610272565b005b34801561009757600080fd5b506100a06103e3565b6040516100ad9190610673565b60405180910390f35b3480156100c257600080fd5b506100cb6103eb565b005b6000600760009054906101000a900460ff161561011f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610116906106eb565b60405180910390fd5b60045460025461012f919061073a565b4310610170576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610167906107ba565b60405180910390fd5b43600454600254610181919061073a565b61018b91906107da565b600554610198919061080e565b6003546101a5919061073a565b3410156101e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de906108c2565b60405180910390fd5b6001600760006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600681905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900460ff166102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b89061092e565b60405180910390fd5b600760019054906101000a900460ff1615610311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103089061099a565b60405180910390fd5b600081905060065481111561035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035290610a2c565b60405180910390fd5b6001600760016101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156103de573d6000803e3d6000fd5b505050565b600043905090565b600760009054906101000a900460ff1661043a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104319061092e565b60405180910390fd5b600760019054906101000a900460ff161561048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048190610a98565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610b2a565b60405180910390fd5b6001600760016101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006549081150290604051600060405180830381858888f1935050505015801561059d573d6000803e3d6000fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105cb826105a0565b9050919050565b6105db816105c0565b82525050565b60006020820190506105f660008301846105d2565b92915050565b600080fd5b6000819050919050565b61061481610601565b811461061f57600080fd5b50565b6000813590506106318161060b565b92915050565b60006020828403121561064d5761064c6105fc565b5b600061065b84828501610622565b91505092915050565b61066d81610601565b82525050565b60006020820190506106886000830184610664565b92915050565b600082825260208201905092915050565b7f54686520636f6d6d6f6469747920686173206265656e20626f75676874000000600082015250565b60006106d5601d8361068e565b91506106e08261069f565b602082019050919050565b60006020820190508181036000830152610704816106c8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061074582610601565b915061075083610601565b92508282019050808211156107685761076761070b565b5b92915050565b7f6f7574206f6620626c6f636b206e756d62657200000000000000000000000000600082015250565b60006107a460138361068e565b91506107af8261076e565b602082019050919050565b600060208201905081810360008301526107d381610797565b9050919050565b60006107e582610601565b91506107f083610601565b92508282039050818111156108085761080761070b565b5b92915050565b600061081982610601565b915061082483610601565b925082820261083281610601565b915082820484148315176108495761084861070b565b5b5092915050565b7f596f75722076616c7565206973206c6f776572207468616e207265736572766560008201527f5072696365000000000000000000000000000000000000000000000000000000602082015250565b60006108ac60258361068e565b91506108b782610850565b604082019050919050565b600060208201905081810360008301526108db8161089f565b9050919050565b7f7468652061756374696f6e20697320676f696e67000000000000000000000000600082015250565b600061091860148361068e565b9150610923826108e2565b602082019050919050565b600060208201905081810360008301526109478161090b565b9050919050565b7f7468652061756374696f6e206861732073746f70706564000000000000000000600082015250565b600061098460178361068e565b915061098f8261094e565b602082019050919050565b600060208201905081810360008301526109b381610977565b9050919050565b7f726566756e64206d757374206c6f776572207468616e2077696e6e696e67426960008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610a1660218361068e565b9150610a21826109ba565b604082019050919050565b60006020820190508181036000830152610a4581610a09565b9050919050565b7f7468652061756374696f6e206861732066696e616c697a656400000000000000600082015250565b6000610a8260198361068e565b9150610a8d82610a4c565b602082019050919050565b60006020820190508181036000830152610ab181610a75565b9050919050565b7f73656e6465722041646472657373206f73206e6f7420657175616c20746f207760008201527f696e6e6572416464726573730000000000000000000000000000000000000000602082015250565b6000610b14602c8361068e565b9150610b1f82610ab8565b604082019050919050565b60006020820190508181036000830152610b4381610b07565b905091905056fea264697066735822122035ecb78d38c7be1a81a700227017f6a168ef6fe97a95eb9a531366e4eb034f8364736f6c63430008110033";

type BasicDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicDutchAuction__factory extends ContractFactory {
  constructor(...args: BasicDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicDutchAuction> {
    return super.deploy(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<BasicDutchAuction>;
  }
  override getDeployTransaction(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): BasicDutchAuction {
    return super.attach(address) as BasicDutchAuction;
  }
  override connect(signer: Signer): BasicDutchAuction__factory {
    return super.connect(signer) as BasicDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicDutchAuctionInterface {
    return new utils.Interface(_abi) as BasicDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as BasicDutchAuction;
  }
}
