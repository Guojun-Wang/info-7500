/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OfficalERC20,
  OfficalERC20Interface,
} from "../../contracts/OfficalERC20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "pubmint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600281526020017f48490000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f486900000000000000000000000000000000000000000000000000000000000081525081600390816200008f91906200035b565b508060049081620000a191906200035b565b505050620000d87f6da8910ec2f991b3934dd600d2b0db60693e6ce569fe637467982bc3be4fe17f60001b620000de60201b60201c565b62000442565b50565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200016357607f821691505b6020821081036200017957620001786200011b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a4565b620001ef8683620001a4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200023c62000236620002308462000207565b62000211565b62000207565b9050919050565b6000819050919050565b62000258836200021b565b62000270620002678262000243565b848454620001b1565b825550505050565b600090565b6200028762000278565b620002948184846200024d565b505050565b5b81811015620002bc57620002b06000826200027d565b6001810190506200029a565b5050565b601f8211156200030b57620002d5816200017f565b620002e08462000194565b81016020851015620002f0578190505b62000308620002ff8562000194565b83018262000299565b50505b505050565b600082821c905092915050565b6000620003306000198460080262000310565b1980831691505092915050565b60006200034b83836200031d565b9150826002028217905092915050565b6200036682620000e1565b67ffffffffffffffff811115620003825762000381620000ec565b5b6200038e82546200014a565b6200039b828285620002c0565b600060209050601f831160018114620003d35760008415620003be578287015190505b620003ca85826200033d565b8655506200043a565b601f198416620003e3866200017f565b60005b828110156200040d57848901518255600182019150602085019450602081019050620003e6565b868310156200042d578489015162000429601f8916826200031d565b8355505b6001600288020188555050505b505050505050565b6114ad80620004526000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a35780638438d1d0146101d357806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610d1e565b60405180910390f35b6100f160048036038101906100ec9190610dd9565b61032f565b6040516100fe9190610e34565b60405180910390f35b61010f610352565b60405161011c9190610e5e565b60405180910390f35b61013f600480360381019061013a9190610e79565b61035c565b60405161014c9190610e34565b60405180910390f35b61015d61038b565b60405161016a9190610ee8565b60405180910390f35b61018d60048036038101906101889190610dd9565b610394565b60405161019a9190610e34565b60405180910390f35b6101bd60048036038101906101b89190610f03565b6103cb565b6040516101ca9190610e5e565b60405180910390f35b6101ed60048036038101906101e89190610dd9565b610413565b005b6101f76104a5565b6040516102049190610d1e565b60405180910390f35b61022760048036038101906102229190610dd9565b610537565b6040516102349190610e34565b60405180910390f35b61025760048036038101906102529190610dd9565b6105ae565b6040516102649190610e34565b60405180910390f35b61028760048036038101906102829190610f30565b6105d1565b6040516102949190610e5e565b60405180910390f35b6060600380546102ac90610f9f565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610f9f565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b60008061033a610658565b9050610347818585610660565b600191505092915050565b6000600254905090565b600080610367610658565b9050610374858285610829565b61037f8585856108b5565b60019150509392505050565b60006012905090565b60008061039f610658565b90506103c08185856103b185896105d1565b6103bb9190610fff565b610660565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61043f7fb1fa3ee627b6f80f92367c7bb243f2d0b3534c926919c4a2cc7d58a04c2261b260001b610b2b565b61046b7f9f712e0f4e1279cccf7e7ce078d9c350c64c37b291d345808dfc01e998acac5760001b610b2b565b6104977fea91f8aaf48e736d7db9a48a636a9d341895c1f7939f3845dfc54d13c7d5854760001b610b2b565b6104a18282610b2e565b5050565b6060600480546104b490610f9f565b80601f01602080910402602001604051908101604052809291908181526020018280546104e090610f9f565b801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b5050505050905090565b600080610542610658565b9050600061055082866105d1565b905083811015610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906110a5565b60405180910390fd5b6105a28286868403610660565b60019250505092915050565b6000806105b9610658565b90506105c68185856108b5565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c690611137565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361073e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610735906111c9565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161081c9190610e5e565b60405180910390a3505050565b600061083584846105d1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108af57818110156108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089890611235565b60405180910390fd5b6108ae8484848403610660565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b906112c7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a90611359565b60405180910390fd5b61099e838383610c84565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b906113eb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b129190610e5e565b60405180910390a3610b25848484610c89565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9490611457565b60405180910390fd5b610ba960008383610c84565b8060026000828254610bbb9190610fff565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c6c9190610e5e565b60405180910390a3610c8060008383610c89565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cc8578082015181840152602081019050610cad565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cf082610c8e565b610cfa8185610c99565b9350610d0a818560208601610caa565b610d1381610cd4565b840191505092915050565b60006020820190508181036000830152610d388184610ce5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7082610d45565b9050919050565b610d8081610d65565b8114610d8b57600080fd5b50565b600081359050610d9d81610d77565b92915050565b6000819050919050565b610db681610da3565b8114610dc157600080fd5b50565b600081359050610dd381610dad565b92915050565b60008060408385031215610df057610def610d40565b5b6000610dfe85828601610d8e565b9250506020610e0f85828601610dc4565b9150509250929050565b60008115159050919050565b610e2e81610e19565b82525050565b6000602082019050610e496000830184610e25565b92915050565b610e5881610da3565b82525050565b6000602082019050610e736000830184610e4f565b92915050565b600080600060608486031215610e9257610e91610d40565b5b6000610ea086828701610d8e565b9350506020610eb186828701610d8e565b9250506040610ec286828701610dc4565b9150509250925092565b600060ff82169050919050565b610ee281610ecc565b82525050565b6000602082019050610efd6000830184610ed9565b92915050565b600060208284031215610f1957610f18610d40565b5b6000610f2784828501610d8e565b91505092915050565b60008060408385031215610f4757610f46610d40565b5b6000610f5585828601610d8e565b9250506020610f6685828601610d8e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fb757607f821691505b602082108103610fca57610fc9610f70565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061100a82610da3565b915061101583610da3565b925082820190508082111561102d5761102c610fd0565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061108f602583610c99565b915061109a82611033565b604082019050919050565b600060208201905081810360008301526110be81611082565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611121602483610c99565b915061112c826110c5565b604082019050919050565b6000602082019050818103600083015261115081611114565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006111b3602283610c99565b91506111be82611157565b604082019050919050565b600060208201905081810360008301526111e2816111a6565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061121f601d83610c99565b915061122a826111e9565b602082019050919050565b6000602082019050818103600083015261124e81611212565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006112b1602583610c99565b91506112bc82611255565b604082019050919050565b600060208201905081810360008301526112e0816112a4565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611343602383610c99565b915061134e826112e7565b604082019050919050565b6000602082019050818103600083015261137281611336565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006113d5602683610c99565b91506113e082611379565b604082019050919050565b60006020820190508181036000830152611404816113c8565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611441601f83610c99565b915061144c8261140b565b602082019050919050565b6000602082019050818103600083015261147081611434565b905091905056fea2646970667358221220f0ae84972572da4eb32393aec21d11917159e3e12f08ee653a57b49f2537739264736f6c63430008110033";

type OfficalERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OfficalERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OfficalERC20__factory extends ContractFactory {
  constructor(...args: OfficalERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OfficalERC20> {
    return super.deploy(overrides || {}) as Promise<OfficalERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OfficalERC20 {
    return super.attach(address) as OfficalERC20;
  }
  override connect(signer: Signer): OfficalERC20__factory {
    return super.connect(signer) as OfficalERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OfficalERC20Interface {
    return new utils.Interface(_abi) as OfficalERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OfficalERC20 {
    return new Contract(address, _abi, signerOrProvider) as OfficalERC20;
  }
}
