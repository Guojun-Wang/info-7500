/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Lock, LockInterface } from "../../contracts/Lock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051620009df380380620009df833981810160405281019061002791906102b7565b6100597fbea6ef0a2ca2659c384f61046c025ff3764cefff9addc336166603ba6f3dc63460001b61027960201b60201c565b61008b7feeeb25a1a491ca94485f48635d734c3ced70665b2119dcca9939be39de56f9db60001b61027960201b60201c565b6100bd7ff2d647a321dd55671d8d741d70ad1d05d2ab450356fd3943afe3fc615500071a60001b61027960201b60201c565b6100ef7f41a9729a282aec6c197cad60ad4b81391b7129772c7e03a0cc05e92f4e09782360001b61027960201b60201c565b804210610131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012890610367565b60405180910390fd5b6101637f5a69e6d462d65e318f137b98b01503a8be269b98ec938f61edf48479daca61ad60001b61027960201b60201c565b6101957fad230dd36a3df4480b31ba416896a3cc6b8eaf9b0a61ab98fcc34b1e182e48a460001b61027960201b60201c565b6101c77f12f6a9be88d3c9122bf4cbf6fa54176973010d17924c521f2b4771826b598b3260001b61027960201b60201c565b806000819055506102007fc5f9911ab013a9edb1b8c9e06b7b2d2ef316b4a81bda1f7eeda1b856cfd51d6a60001b61027960201b60201c565b6102327f7057289f4824167c799b3e796c631fa68eaf8d507e637cdeb359254e596245d760001b61027960201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610387565b50565b600080fd5b6000819050919050565b61029481610281565b811461029f57600080fd5b50565b6000815190506102b18161028b565b92915050565b6000602082840312156102cd576102cc61027c565b5b60006102db848285016102a2565b91505092915050565b600082825260208201905092915050565b7f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b60006103516023836102e4565b915061035c826102f5565b604082019050919050565b6000602082019050818103600083015261038081610344565b9050919050565b61064880620003976000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100645780638da5cb5b1461006e575b600080fd5b61004e61008c565b60405161005b9190610489565b60405180910390f35b61006c610092565b005b610076610447565b60405161008391906104e5565b60405180910390f35b60005481565b6100be7fcd547cbcd90ffe61b45d6e3d55876e7ece55295adb6d503b5367696d1819d50460001b61046d565b6100ea7f44e8517bc65b6187e48bcf092e30278e4b2b5eace8652eefebe776caeb1fe95360001b61046d565b6101167f316cc3e61d73bd63c524322f7ee0e3a847c82d1f1d4ff786f97a2a509c19028660001b61046d565b6101427fe90510ba5299bd240d915c5221f3b0f593ce9e8da8a5855eb67e1018b9c5920360001b61046d565b600054421015610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017e9061055d565b60405180910390fd5b6101b37f844473c34d4c29add4d1ff37e18c7c701c1826fa427d2ac531f843965bc5658d60001b61046d565b6101df7fa820d8333d69ea7f411510c24352edbb4bdc8ab024521f1bb8083ed31c775a6a60001b61046d565b61020b7f99e32df181e3e54e90a4b4423e78b892a1e2e917522d7add63f866fc825c771d60001b61046d565b6102377fbbbb9d595984125ebd81a720182e8067d3e7ce1b5b26390caa81113a00b6c43e60001b61046d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be906105c9565b60405180910390fd5b6102f37f21eaa091f2f63869b9339c02e3b42a394b2cd9db0342c50b4f7373a8a08cd07360001b61046d565b61031f7f6a2baf45238bd2439eb2c811a358fcf16b4b8a6e3f28f1dc729b6cc61ceb071660001b61046d565b61034b7f127d3f62d1d2f2059872ae5763c61d4abb76c5fed7131d94823ae7fe49f616e160001b61046d565b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93474260405161037c9291906105e9565b60405180910390a16103b07f2592b05eef200ca658294e5f450f19fb33bcafcc57e4a60ed321a80c6dbf730860001b61046d565b6103dc7f098bcb6b08b53190b6c862b1d5eef8d035d8b146e3bc2bc655888db39ce6f94e60001b61046d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610444573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b6000819050919050565b61048381610470565b82525050565b600060208201905061049e600083018461047a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104cf826104a4565b9050919050565b6104df816104c4565b82525050565b60006020820190506104fa60008301846104d6565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b6000610547601683610500565b915061055282610511565b602082019050919050565b600060208201905081810360008301526105768161053a565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b60006105b3601483610500565b91506105be8261057d565b602082019050919050565b600060208201905081810360008301526105e2816105a6565b9050919050565b60006040820190506105fe600083018561047a565b61060b602083018461047a565b939250505056fea264697066735822122091fbf1ebbe94d2e403e92cb6c58a897ed9242888c40f6f682de66a9830bb9b4664736f6c63430008110033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _unlockTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Lock> {
    return super.deploy(_unlockTime, overrides || {}) as Promise<Lock>;
  }
  override getDeployTransaction(
    _unlockTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_unlockTime, overrides || {});
  }
  override attach(address: string): Lock {
    return super.attach(address) as Lock;
  }
  override connect(signer: Signer): Lock__factory {
    return super.connect(signer) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new utils.Interface(_abi) as LockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Lock {
    return new Contract(address, _abi, signerOrProvider) as Lock;
  }
}
