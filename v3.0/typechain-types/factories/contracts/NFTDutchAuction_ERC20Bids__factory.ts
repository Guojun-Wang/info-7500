/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTDutchAuction_ERC20Bids,
  NFTDutchAuction_ERC20BidsInterface,
} from "../../contracts/NFTDutchAuction_ERC20Bids";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011f0380380620011f0833981810160405281019062000037919062000226565b826006819055508160078190555080600881905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550436003819055508360098190555085600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050620002c2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015a826200012d565b9050919050565b60006200016e826200014d565b9050919050565b620001808162000161565b81146200018c57600080fd5b50565b600081519050620001a08162000175565b92915050565b6000620001b3826200014d565b9050919050565b620001c581620001a6565b8114620001d157600080fd5b50565b600081519050620001e581620001ba565b92915050565b6000819050919050565b6200020081620001eb565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b60008060008060008060c0878903121562000246576200024562000128565b5b60006200025689828a016200018f565b96505060206200026989828a01620001d4565b95505060406200027c89828a016200020f565b94505060606200028f89828a016200020f565b9350506080620002a289828a016200020f565b92505060a0620002b589828a016200020f565b9150509295509295509295565b610f1e80620002d26000396000f3fe6080604052600436106100345760003560e01c80631998aeef14610039578063278ecde1146100575780634bb278f314610080575b600080fd5b610041610097565b60405161004e91906107ba565b60405180910390f35b34801561006357600080fd5b5061007e60048036038101906100799190610810565b6103bd565b005b34801561008c57600080fd5b50610095610568565b005b6000600b60009054906101000a900460ff16156100e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e09061089a565b60405180910390fd5b6007546003546100f991906108e9565b431061013a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013190610969565b60405180910390fd5b4360075460035461014b91906108e9565b6101559190610989565b60085461016291906109bd565b60065461016f91906108e9565b3410156101b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a890610a71565b60405180910390fd5b34600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161020d91906107ba565b602060405180830381865afa15801561022a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024e9190610aa6565b101561028f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028690610b1f565b60405180910390fd5b6001600b60006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600a81905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330346040518463ffffffff1660e01b815260040161035193929190610b4e565b6020604051808303816000875af1158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610bbd565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60009054906101000a900460ff1661040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390610c36565b60405180910390fd5b600b60019054906101000a900460ff161561045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045390610ca2565b60405180910390fd5b6000819050600a548111156104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d90610d34565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b815260040161052093929190610b4e565b6020604051808303816000875af115801561053f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105639190610bbd565b505050565b600b60009054906101000a900460ff166105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90610c36565b60405180910390fd5b600b60019054906101000a900460ff1615610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90610da0565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e90610e32565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a546040518463ffffffff1660e01b815260040161073393929190610eb1565b6020604051808303816000875af1158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190610bbd565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a482610779565b9050919050565b6107b481610799565b82525050565b60006020820190506107cf60008301846107ab565b92915050565b600080fd5b6000819050919050565b6107ed816107da565b81146107f857600080fd5b50565b60008135905061080a816107e4565b92915050565b600060208284031215610826576108256107d5565b5b6000610834848285016107fb565b91505092915050565b600082825260208201905092915050565b7f54686520636f6d6d6f6469747920686173206265656e20626f75676874000000600082015250565b6000610884601d8361083d565b915061088f8261084e565b602082019050919050565b600060208201905081810360008301526108b381610877565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108f4826107da565b91506108ff836107da565b9250828201905080821115610917576109166108ba565b5b92915050565b7f6f7574206f6620626c6f636b206e756d62657200000000000000000000000000600082015250565b600061095360138361083d565b915061095e8261091d565b602082019050919050565b6000602082019050818103600083015261098281610946565b9050919050565b6000610994826107da565b915061099f836107da565b92508282039050818111156109b7576109b66108ba565b5b92915050565b60006109c8826107da565b91506109d3836107da565b92508282026109e1816107da565b915082820484148315176109f8576109f76108ba565b5b5092915050565b7f596f75722076616c7565206973206c6f776572207468616e207265736572766560008201527f5072696365000000000000000000000000000000000000000000000000000000602082015250565b6000610a5b60258361083d565b9150610a66826109ff565b604082019050919050565b60006020820190508181036000830152610a8a81610a4e565b9050919050565b600081519050610aa0816107e4565b92915050565b600060208284031215610abc57610abb6107d5565b5b6000610aca84828501610a91565b91505092915050565b7f48617665206e6f20656e6f7567682076616c7565000000000000000000000000600082015250565b6000610b0960148361083d565b9150610b1482610ad3565b602082019050919050565b60006020820190508181036000830152610b3881610afc565b9050919050565b610b48816107da565b82525050565b6000606082019050610b6360008301866107ab565b610b7060208301856107ab565b610b7d6040830184610b3f565b949350505050565b60008115159050919050565b610b9a81610b85565b8114610ba557600080fd5b50565b600081519050610bb781610b91565b92915050565b600060208284031215610bd357610bd26107d5565b5b6000610be184828501610ba8565b91505092915050565b7f7468652061756374696f6e20697320676f696e67000000000000000000000000600082015250565b6000610c2060148361083d565b9150610c2b82610bea565b602082019050919050565b60006020820190508181036000830152610c4f81610c13565b9050919050565b7f7468652061756374696f6e206861732073746f70706564000000000000000000600082015250565b6000610c8c60178361083d565b9150610c9782610c56565b602082019050919050565b60006020820190508181036000830152610cbb81610c7f565b9050919050565b7f726566756e64206d757374206c6f776572207468616e2077696e6e696e67426960008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d1e60218361083d565b9150610d2982610cc2565b604082019050919050565b60006020820190508181036000830152610d4d81610d11565b9050919050565b7f7468652061756374696f6e206861732066696e616c697a656400000000000000600082015250565b6000610d8a60198361083d565b9150610d9582610d54565b602082019050919050565b60006020820190508181036000830152610db981610d7d565b9050919050565b7f73656e6465722041646472657373206f73206e6f7420657175616c20746f207760008201527f696e6e6572416464726573730000000000000000000000000000000000000000602082015250565b6000610e1c602c8361083d565b9150610e2782610dc0565b604082019050919050565b60006020820190508181036000830152610e4b81610e0f565b9050919050565b6000819050919050565b6000610e77610e72610e6d84610779565b610e52565b610779565b9050919050565b6000610e8982610e5c565b9050919050565b6000610e9b82610e7e565b9050919050565b610eab81610e90565b82525050565b6000606082019050610ec660008301866107ab565b610ed36020830185610ea2565b610ee06040830184610b3f565b94935050505056fea264697066735822122078c97419251f93967273c40a98d25507e52fac649b818d08c07468297357275164736f6c63430008110033";

type NFTDutchAuction_ERC20BidsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuction_ERC20BidsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction_ERC20Bids__factory extends ContractFactory {
  constructor(...args: NFTDutchAuction_ERC20BidsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc721TokenAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction_ERC20Bids> {
    return super.deploy(
      _erc721TokenAddress,
      _tokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction_ERC20Bids>;
  }
  override getDeployTransaction(
    _erc721TokenAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc721TokenAddress,
      _tokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction_ERC20Bids {
    return super.attach(address) as NFTDutchAuction_ERC20Bids;
  }
  override connect(signer: Signer): NFTDutchAuction_ERC20Bids__factory {
    return super.connect(signer) as NFTDutchAuction_ERC20Bids__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuction_ERC20BidsInterface {
    return new utils.Interface(_abi) as NFTDutchAuction_ERC20BidsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction_ERC20Bids {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTDutchAuction_ERC20Bids;
  }
}
