/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTDutchAuction_ERC20Bids,
  NFTDutchAuction_ERC20BidsInterface,
} from "../../contracts/NFTDutchAuction_ERC20Bids";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021203803806200212083398181016040528101906200003791906200059d565b6200006b7fa4e4d4de8d24c3ccf8be7e8c7530534deb359879eeda15c944f20502e2f061f160001b6200049c60201b60201c565b6200009f7f15cad2dfd2a69610e8dd041ab429b31e49ed0c5b2f3773914d68117f48e3fc3c60001b6200049c60201b60201c565b620000d37f3a7da1f875be3a3fe19bbe14725c1cdb6cfa51dc0e4f2da4f8bb0a0b958119ce60001b6200049c60201b60201c565b826006819055506200010e7fca8c7050886fdf3feeccedf003a4080acdfa3e4aa5075aebd3cf01ccb82e36ad60001b6200049c60201b60201c565b620001427fcc24b9ae64957484122732a98d20d8aabab52bb06c3eb5a8891a7eeb2c44e62760001b6200049c60201b60201c565b816007819055506200017d7fc14167217a44d1610f3a4b662607238320ce7c9056d63ed1da7d7dd855f5c34f60001b6200049c60201b60201c565b620001b17fdd0825f1c1d04325e6a8c220520aea30e988acb59904c5f759f58b85d8be5c6660001b6200049c60201b60201c565b80600881905550620001ec7f4879a22330d5b951638ff3155ff0e08c0630672be021b97db32af9f98bb3037f60001b6200049c60201b60201c565b620002207f733f72dbce37a6afbbc62ab609790bb1e2f860e87414c4961a8e587514c59ee260001b6200049c60201b60201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620002947f21e484f6fa1ef22bab6386337c30c5a56171d74fb235c92c5505eb544b50f29760001b6200049c60201b60201c565b620002c87f0e7929abff8cc935883394fe6929dccd6e798f3ba1f786c10099953b296f515960001b6200049c60201b60201c565b43600381905550620003037f5c2499f82bd9cde043cbe48c35eb62bddfa6777bfb08b6248dac8d9533ca708b60001b6200049c60201b60201c565b620003377fcf7ca273d45276ec19f9907bf0acb90e9e1c63c4bc00aaf418f72429739ca14860001b6200049c60201b60201c565b83600981905550620003727fda3de37bc8710d14f6644f95d1298ec369e99c99855774a1bbda4f009a7f45af60001b6200049c60201b60201c565b620003a67f34e74cb2a54ed14d9c18585861389564d84d012f13ed6ea15c7d9d174c635ad360001b6200049c60201b60201c565b85600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200041b7f9cc82d4c31b7bbbad7bc3a7a2b0e455b2db9e2baa60b036196264f45b5d40f4f60001b6200049c60201b60201c565b6200044f7fff78d4a4db3e60e1a8857d6bf4368e8901272c0a5e9ea50bcda830120b81be3b60001b6200049c60201b60201c565b84600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505062000639565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004d182620004a4565b9050919050565b6000620004e582620004c4565b9050919050565b620004f781620004d8565b81146200050357600080fd5b50565b6000815190506200051781620004ec565b92915050565b60006200052a82620004c4565b9050919050565b6200053c816200051d565b81146200054857600080fd5b50565b6000815190506200055c8162000531565b92915050565b6000819050919050565b620005778162000562565b81146200058357600080fd5b50565b60008151905062000597816200056c565b92915050565b60008060008060008060c08789031215620005bd57620005bc6200049f565b5b6000620005cd89828a0162000506565b9650506020620005e089828a016200054b565b9550506040620005f389828a0162000586565b94505060606200060689828a0162000586565b93505060806200061989828a0162000586565b92505060a06200062c89828a0162000586565b9150509295509295509295565b611ad780620006496000396000f3fe60806040526004361061004a5760003560e01c80631998aeef1461004f578063278ecde11461006d5780634bb278f3146100965780638f84aa09146100ad578063ed7a4e0b146100d8575b600080fd5b610057610103565b6040516100649190611345565b60405180910390f35b34801561007957600080fd5b50610094600480360381019061008f919061139b565b6108cd565b005b3480156100a257600080fd5b506100ab610dbc565b005b3480156100b957600080fd5b506100c26112b7565b6040516100cf91906113e9565b60405180910390f35b3480156100e457600080fd5b506100ed6112db565b6040516100fa91906113e9565b60405180910390f35b60006101317f226c4ec6a8051eda008aeaa0f927704c5e2525c023eb92285cfcd26b17a27c2e60001b611301565b61015d7f7d2daa09df292a3d2639161964b3c08487b29a4163f4f432167a924ac3769aaa60001b611301565b6101897f37652e596e73ccaec209ca4634f4a37c09c39217ca45fd117ece6e504d85d0bd60001b611301565b6101b57f6e7b32feedf0188f466cb094a264b24558c5580f32c38113d9238641d1489d9060001b611301565b600b60009054906101000a900460ff1615610205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fc90611461565b60405180910390fd5b6102317f3ac1991ef6d27845a447b0106071b608cf3509327f30a04cca5ac1582cf6bf2c60001b611301565b61025d7ff548010309cc0d8dee2db1a9ad6f2d58601041eaf360ad33b05452e6dc55c4fc60001b611301565b6102897f750d39d3135fcb6705c6ede25cc182862555fce908e42cbb91a27236f6f4c2d360001b611301565b6102b57f239237c4407a3c3c31fa222d72ea6db9982f51faf6ecefb80f8c6135b0dacdf960001b611301565b6007546003546102c591906114b0565b4310610306576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fd90611530565b60405180910390fd5b6103327f5593a38f23b0cfb4daf0ac285167ca856f437a5063b66b3e625ce74a41a37b8560001b611301565b61035e7f6f1646419d1e864e8210a046126d16f831d7c312b717b40e8e5902001678b57660001b611301565b61038a7fc3922e1d38194bdffd97023570aa385996634909ba6873a1a042e1358a43afd460001b611301565b6103b67f1ebe32cb7de6637b43534f1d4fdaf46129a9d10f92ade8f4c750e6ca97ac7a2060001b611301565b436007546003546103c791906114b0565b6103d19190611550565b6008546103de9190611584565b6006546103eb91906114b0565b34101561042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042490611638565b60405180910390fd5b6104597fbe304624e69ac07cdcf20f4cb824db868c8fabe920f913820e6dc05523c74a5260001b611301565b6104857fa68f5d9721b38ea3fd2e2228a91920e97609421c84d59387cf99e9d5335cd7bf60001b611301565b6104b17f48c195ab3e491c573ef115d66e26169cf207b2337cba7aae2453091bd8d84b6760001b611301565b6104dd7fcce726c206e735215fe102b25fd2da0da13911a540a86a0bb2177e85cd1a517c60001b611301565b34600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105399190611345565b602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a919061166d565b10156105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b2906116e6565b60405180910390fd5b6105e77f243d37f94d03fa768f4e26dc00b473e46285ac7e4c330860f24e0a2d75bb1b2160001b611301565b6106137f575230023e672c7b09a51104764a5b0a7dcfc5f81899b96b16dc9c917b8c362a60001b611301565b61063f7f1daa871ca525a899a742ed0b9c76d0226c8f876601835dd73f994c0967b99fa860001b611301565b6001600b60006101000a81548160ff0219169083151502179055506106867fa82aaac9ae84bd9ca052fc812cf9f44ee0e5989ab7d6d1aa2db8b225aa96e89f60001b611301565b6106b27fe6a40c8c7c4f1732827a82b33b323cc9f110b0306d51d50d1c267b975b02bf5e60001b611301565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061071f7fd0877415b0376d8ff44c5411f9bf8b0c9aee5c10d1b4c9231319ca8aef1d569060001b611301565b61074b7fbecf196ec2679ce4d54c049776b3abd5811e13f6bf78865bc5d175f8f3e8779960001b611301565b34600a8190555061077e7fd51f6567a344f7ef4923e89bfd885c67922766f5ff523295477a9cb11ca3c03160001b611301565b6107aa7f97ccf4fffa65a958f6c538722ac3227bfb6ca073b32e9629d75a9d8630675e7760001b611301565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330346040518463ffffffff1660e01b815260040161080993929190611715565b6020604051808303816000875af1158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190611784565b506108797f2a29943e9a8c102db8e46342eedc15413ea1fd8c6ebeabb5981425460bb2504b60001b611301565b6108a57f3ff8d233c865c44b56dfa705bc531f2b0065dc439d7798e8eed18954794d5a4f60001b611301565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108f97f2526f7e1c2d43d0f4d0bf3656a51028a81b1a0f6a33d227ea05251fd601cd55c60001b611301565b6109257ff34365bb03084d12e3652d214be20203b7afb3fa79d8f5886746e490437a23b760001b611301565b6109517f918588913cb5f0c2b83089ec9943a6f77593452d1f5b45081c756c2d9bbd686c60001b611301565b61097d7f80818846fa7258e7f14643e59f8f07703befee2acef927868af8b266d74cc4d560001b611301565b600b60009054906101000a900460ff166109cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c3906117fd565b60405180910390fd5b6109f87f489090cb297da85583ee73b18d20aff6220b1ba445a3091935e3bdec2d8dbf6460001b611301565b610a247f93c8b826463db40f4841ef9eda8c48a97b489bedccd785f26fe51afbc8e4b0a360001b611301565b610a507f673f172458bf879696499fb62ad56f327e025a69ff856ffef4201484ab5a621d60001b611301565b610a7c7fa0217951df05a94b4ba67ecb151e68854c3e131e6780ab4c0f5ed41009db366960001b611301565b600b60019054906101000a900460ff1615610acc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac390611869565b60405180910390fd5b610af87f260400bc3ee3575e4806b57eb42b4853209c3d35071c75f5f3d39797a6d7a4c060001b611301565b610b247f99eb962544b383dd46a32cb3ca0c11a36824967b7206e1d7af37ead3417e788060001b611301565b610b507ffb962452cc1a101638543b7360aa8129aae2f7bc23b03a0eff7e1b699a992a0460001b611301565b6000819050610b817f5a2696c7a77ab1c73b6e96f15aa9bc2166d76529594bfe4f9771581710c2bd5160001b611301565b610bad7f3a81466ac933915f4b2986f04fa583d40eb7e48ff6bdb2446ea12fc60e79bbfc60001b611301565b610bd97f33e5f26133826ce32e08423d38a0df221986dd4dc892656aea7d12860187caec60001b611301565b600a54811115610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c15906118fb565b60405180910390fd5b610c4a7f2aa174f61de0be718c49c9663797b48d5ccb9a1212f5bc9f6e77b5fdca90378360001b611301565b610c767f516df0b2db16c9b1f2392e6d8a3f5730d26b62bbea6ff674150c1d32898fc42560001b611301565b610ca27ffa4e4a446013019743bdd8b412238c9a14e08af8ba5aad63a63d84ea1d33ad6460001b611301565b6001600b60016101000a81548160ff021916908315150217905550610ce97f342552cb9095c9a576e3fd6ee971e7627ce3c911016843f3c8270edcac3d32be60001b611301565b610d157f0b81c2c67b252dda4f997e3946032585f052a6e7aff4bb1c42b571bf61f2776960001b611301565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b8152600401610d7493929190611715565b6020604051808303816000875af1158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611784565b505050565b610de87ff1a4bd07e863eb04aebf918ca1ca607305db000625490d2e185d63309d3a3a5060001b611301565b610e147f3804fbcb4fbfbefd20356b1df55e5abf4464f9ac34a8d6f0e54976cbd2b6794660001b611301565b610e407f86810a499389408e65382d678e8ab40d7412c8ae0e4005f23dfa4cc53bff869960001b611301565b610e6c7f665a485c591e410b9f1bdf566d0ff5b929809bc6fee51c7824427657b5a2688060001b611301565b600b60009054906101000a900460ff16610ebb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb2906117fd565b60405180910390fd5b610ee77fdaf0d9cc53eaa3befe84da59eee7e13b51f75a155079d00396677809256775e260001b611301565b610f137f07e4d94fc7a570cc0e3460972daf845a05f16ef765d2321619688e03930e779c60001b611301565b610f3f7fbb96dd447c9b257aa97712109fd08858e99ce0b4e02526f36baac474301f95eb60001b611301565b610f6b7fe054087116001a701217475cdd7f6a77687d50d3ea5568590378342edddeab8360001b611301565b600b60019054906101000a900460ff1615610fbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb290611967565b60405180910390fd5b610fe77fde09ad45a220e61b0df7bf62259bd577f78342937cd14a013c8ddd6ae271d13960001b611301565b6110137f55d3ad4a224c73b0b0cf53fb787ee235e6225f17da253c2d9d54d64fd111745e60001b611301565b61103f7fdeffd881e87caedd0dc6be8460f836b1ab22569853f3dda4708257fc6cef73e660001b611301565b61106b7f7ccf72a4e7e2b272a3d8b59c72db7f55abf9f752fbc8fc4570b54bc42cd3600060001b611301565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f2906119f9565b60405180910390fd5b6111277f2aff904f0ba90f0bb992822b71836485c4ce2e49e037e65837278149aa1dd75360001b611301565b6111537f525718889ef09381b3deac6454646faa007f8519ff33371ce73e7319c258e6a460001b611301565b61117f7fb6ac88708cdd0ce8cfed9773a83e494c387f9e84a6b20ffe308f45d2b1b52b0360001b611301565b6001600b60016101000a81548160ff0219169083151502179055506111c67f0365301ee2fcf6e3f54623c3f932e763f230619242202f39930fd6f473214ddd60001b611301565b6111f27fe6b6c10af3785fb4c56ba788ee7518695c9deadf9c0de6cc1d345b1b85822c2960001b611301565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a546040518363ffffffff1660e01b8152600401611271929190611a78565b6020604051808303816000875af1158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b49190611784565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061132f82611304565b9050919050565b61133f81611324565b82525050565b600060208201905061135a6000830184611336565b92915050565b600080fd5b6000819050919050565b61137881611365565b811461138357600080fd5b50565b6000813590506113958161136f565b92915050565b6000602082840312156113b1576113b0611360565b5b60006113bf84828501611386565b91505092915050565b60006113d382611304565b9050919050565b6113e3816113c8565b82525050565b60006020820190506113fe60008301846113da565b92915050565b600082825260208201905092915050565b7f54686520636f6d6d6f6469747920686173206265656e20626f75676874000000600082015250565b600061144b601d83611404565b915061145682611415565b602082019050919050565b6000602082019050818103600083015261147a8161143e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114bb82611365565b91506114c683611365565b92508282019050808211156114de576114dd611481565b5b92915050565b7f6f7574206f6620626c6f636b206e756d62657200000000000000000000000000600082015250565b600061151a601383611404565b9150611525826114e4565b602082019050919050565b600060208201905081810360008301526115498161150d565b9050919050565b600061155b82611365565b915061156683611365565b925082820390508181111561157e5761157d611481565b5b92915050565b600061158f82611365565b915061159a83611365565b92508282026115a881611365565b915082820484148315176115bf576115be611481565b5b5092915050565b7f596f75722076616c7565206973206c6f776572207468616e207265736572766560008201527f5072696365000000000000000000000000000000000000000000000000000000602082015250565b6000611622602583611404565b915061162d826115c6565b604082019050919050565b6000602082019050818103600083015261165181611615565b9050919050565b6000815190506116678161136f565b92915050565b60006020828403121561168357611682611360565b5b600061169184828501611658565b91505092915050565b7f48617665206e6f20656e6f7567682076616c7565000000000000000000000000600082015250565b60006116d0601483611404565b91506116db8261169a565b602082019050919050565b600060208201905081810360008301526116ff816116c3565b9050919050565b61170f81611365565b82525050565b600060608201905061172a6000830186611336565b6117376020830185611336565b6117446040830184611706565b949350505050565b60008115159050919050565b6117618161174c565b811461176c57600080fd5b50565b60008151905061177e81611758565b92915050565b60006020828403121561179a57611799611360565b5b60006117a88482850161176f565b91505092915050565b7f7468652061756374696f6e20697320676f696e67000000000000000000000000600082015250565b60006117e7601483611404565b91506117f2826117b1565b602082019050919050565b60006020820190508181036000830152611816816117da565b9050919050565b7f7468652061756374696f6e206861732073746f70706564000000000000000000600082015250565b6000611853601783611404565b915061185e8261181d565b602082019050919050565b6000602082019050818103600083015261188281611846565b9050919050565b7f726566756e64206d757374206c6f776572207468616e2077696e6e696e67426960008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006118e5602183611404565b91506118f082611889565b604082019050919050565b60006020820190508181036000830152611914816118d8565b9050919050565b7f7468652061756374696f6e206861732066696e616c697a656400000000000000600082015250565b6000611951601983611404565b915061195c8261191b565b602082019050919050565b6000602082019050818103600083015261198081611944565b9050919050565b7f73656e6465722041646472657373206f73206e6f7420657175616c20746f207760008201527f696e6e6572416464726573730000000000000000000000000000000000000000602082015250565b60006119e3602c83611404565b91506119ee82611987565b604082019050919050565b60006020820190508181036000830152611a12816119d6565b9050919050565b6000819050919050565b6000611a3e611a39611a3484611304565b611a19565b611304565b9050919050565b6000611a5082611a23565b9050919050565b6000611a6282611a45565b9050919050565b611a7281611a57565b82525050565b6000604082019050611a8d6000830185611a69565b611a9a6020830184611706565b939250505056fea2646970667358221220cf07749e10b400e096319d197ccc99c564069004aac803bf007b2c520adfa67664736f6c63430008110033";

type NFTDutchAuction_ERC20BidsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuction_ERC20BidsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction_ERC20Bids__factory extends ContractFactory {
  constructor(...args: NFTDutchAuction_ERC20BidsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc721TokenAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction_ERC20Bids> {
    return super.deploy(
      _erc721TokenAddress,
      _tokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction_ERC20Bids>;
  }
  override getDeployTransaction(
    _erc721TokenAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc721TokenAddress,
      _tokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction_ERC20Bids {
    return super.attach(address) as NFTDutchAuction_ERC20Bids;
  }
  override connect(signer: Signer): NFTDutchAuction_ERC20Bids__factory {
    return super.connect(signer) as NFTDutchAuction_ERC20Bids__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuction_ERC20BidsInterface {
    return new utils.Interface(_abi) as NFTDutchAuction_ERC20BidsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction_ERC20Bids {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTDutchAuction_ERC20Bids;
  }
}
