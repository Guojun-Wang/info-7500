/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTDutchAuction_ERC20Bids,
  NFTDutchAuction_ERC20BidsInterface,
} from "../../contracts/NFTDutchAuction_ERC20Bids";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012e2380380620012e2833981810160405281019062000037919062000226565b826006819055508160078190555080600881905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550436003819055508360098190555085600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050620002c2565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015a826200012d565b9050919050565b60006200016e826200014d565b9050919050565b620001808162000161565b81146200018c57600080fd5b50565b600081519050620001a08162000175565b92915050565b6000620001b3826200014d565b9050919050565b620001c581620001a6565b8114620001d157600080fd5b50565b600081519050620001e581620001ba565b92915050565b6000819050919050565b6200020081620001eb565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b60008060008060008060c0878903121562000246576200024562000128565b5b60006200025689828a016200018f565b96505060206200026989828a01620001d4565b95505060406200027c89828a016200020f565b94505060606200028f89828a016200020f565b9350506080620002a289828a016200020f565b92505060a0620002b589828a016200020f565b9150509295509295509295565b61101080620002d26000396000f3fe60806040526004361061004a5760003560e01c80631998aeef1461004f578063278ecde11461006d5780634bb278f3146100965780638f84aa09146100ad578063ed7a4e0b146100d8575b600080fd5b610057610103565b6040516100649190610870565b60405180910390f35b34801561007957600080fd5b50610094600480360381019061008f91906108c6565b610429565b005b3480156100a257600080fd5b506100ab6105d4565b005b3480156100b957600080fd5b506100c26107e5565b6040516100cf9190610914565b60405180910390f35b3480156100e457600080fd5b506100ed610809565b6040516100fa9190610914565b60405180910390f35b6000600b60009054906101000a900460ff1615610155576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014c9061098c565b60405180910390fd5b60075460035461016591906109db565b43106101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610a5b565b60405180910390fd5b436007546003546101b791906109db565b6101c19190610a7b565b6008546101ce9190610aaf565b6006546101db91906109db565b34101561021d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021490610b63565b60405180910390fd5b34600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102799190610870565b602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba9190610b98565b10156102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f290610c11565b60405180910390fd5b6001600b60006101000a81548160ff02191690831515021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600a81905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330346040518463ffffffff1660e01b81526004016103bd93929190610c40565b6020604051808303816000875af11580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104009190610caf565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60009054906101000a900460ff16610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90610d28565b60405180910390fd5b600b60019054906101000a900460ff16156104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf90610d94565b60405180910390fd5b6000819050600a54811115610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990610e26565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b815260040161058c93929190610c40565b6020604051808303816000875af11580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610caf565b505050565b600b60009054906101000a900460ff16610623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061a90610d28565b60405180910390fd5b600b60019054906101000a900460ff1615610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066a90610e92565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90610f24565b60405180910390fd5b6001600b60016101000a81548160ff021916908315150217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a546040518463ffffffff1660e01b815260040161079f93929190610fa3565b6020604051808303816000875af11580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e29190610caf565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085a8261082f565b9050919050565b61086a8161084f565b82525050565b60006020820190506108856000830184610861565b92915050565b600080fd5b6000819050919050565b6108a381610890565b81146108ae57600080fd5b50565b6000813590506108c08161089a565b92915050565b6000602082840312156108dc576108db61088b565b5b60006108ea848285016108b1565b91505092915050565b60006108fe8261082f565b9050919050565b61090e816108f3565b82525050565b60006020820190506109296000830184610905565b92915050565b600082825260208201905092915050565b7f54686520636f6d6d6f6469747920686173206265656e20626f75676874000000600082015250565b6000610976601d8361092f565b915061098182610940565b602082019050919050565b600060208201905081810360008301526109a581610969565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e682610890565b91506109f183610890565b9250828201905080821115610a0957610a086109ac565b5b92915050565b7f6f7574206f6620626c6f636b206e756d62657200000000000000000000000000600082015250565b6000610a4560138361092f565b9150610a5082610a0f565b602082019050919050565b60006020820190508181036000830152610a7481610a38565b9050919050565b6000610a8682610890565b9150610a9183610890565b9250828203905081811115610aa957610aa86109ac565b5b92915050565b6000610aba82610890565b9150610ac583610890565b9250828202610ad381610890565b91508282048414831517610aea57610ae96109ac565b5b5092915050565b7f596f75722076616c7565206973206c6f776572207468616e207265736572766560008201527f5072696365000000000000000000000000000000000000000000000000000000602082015250565b6000610b4d60258361092f565b9150610b5882610af1565b604082019050919050565b60006020820190508181036000830152610b7c81610b40565b9050919050565b600081519050610b928161089a565b92915050565b600060208284031215610bae57610bad61088b565b5b6000610bbc84828501610b83565b91505092915050565b7f48617665206e6f20656e6f7567682076616c7565000000000000000000000000600082015250565b6000610bfb60148361092f565b9150610c0682610bc5565b602082019050919050565b60006020820190508181036000830152610c2a81610bee565b9050919050565b610c3a81610890565b82525050565b6000606082019050610c556000830186610861565b610c626020830185610861565b610c6f6040830184610c31565b949350505050565b60008115159050919050565b610c8c81610c77565b8114610c9757600080fd5b50565b600081519050610ca981610c83565b92915050565b600060208284031215610cc557610cc461088b565b5b6000610cd384828501610c9a565b91505092915050565b7f7468652061756374696f6e20697320676f696e67000000000000000000000000600082015250565b6000610d1260148361092f565b9150610d1d82610cdc565b602082019050919050565b60006020820190508181036000830152610d4181610d05565b9050919050565b7f7468652061756374696f6e206861732073746f70706564000000000000000000600082015250565b6000610d7e60178361092f565b9150610d8982610d48565b602082019050919050565b60006020820190508181036000830152610dad81610d71565b9050919050565b7f726566756e64206d757374206c6f776572207468616e2077696e6e696e67426960008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e1060218361092f565b9150610e1b82610db4565b604082019050919050565b60006020820190508181036000830152610e3f81610e03565b9050919050565b7f7468652061756374696f6e206861732066696e616c697a656400000000000000600082015250565b6000610e7c60198361092f565b9150610e8782610e46565b602082019050919050565b60006020820190508181036000830152610eab81610e6f565b9050919050565b7f73656e6465722041646472657373206f73206e6f7420657175616c20746f207760008201527f696e6e6572416464726573730000000000000000000000000000000000000000602082015250565b6000610f0e602c8361092f565b9150610f1982610eb2565b604082019050919050565b60006020820190508181036000830152610f3d81610f01565b9050919050565b6000819050919050565b6000610f69610f64610f5f8461082f565b610f44565b61082f565b9050919050565b6000610f7b82610f4e565b9050919050565b6000610f8d82610f70565b9050919050565b610f9d81610f82565b82525050565b6000606082019050610fb86000830186610861565b610fc56020830185610f94565b610fd26040830184610c31565b94935050505056fea2646970667358221220db1d6cd7fc7e8139cf3751eafd4f46c6defee5ccba4b8d80c7456c633946d57764736f6c63430008110033";

type NFTDutchAuction_ERC20BidsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuction_ERC20BidsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction_ERC20Bids__factory extends ContractFactory {
  constructor(...args: NFTDutchAuction_ERC20BidsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _erc721TokenAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction_ERC20Bids> {
    return super.deploy(
      _erc721TokenAddress,
      _tokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction_ERC20Bids>;
  }
  override getDeployTransaction(
    _erc721TokenAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _erc721TokenAddress,
      _tokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction_ERC20Bids {
    return super.attach(address) as NFTDutchAuction_ERC20Bids;
  }
  override connect(signer: Signer): NFTDutchAuction_ERC20Bids__factory {
    return super.connect(signer) as NFTDutchAuction_ERC20Bids__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuction_ERC20BidsInterface {
    return new utils.Interface(_abi) as NFTDutchAuction_ERC20BidsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction_ERC20Bids {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTDutchAuction_ERC20Bids;
  }
}
